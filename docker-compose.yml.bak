version: "3"
services:
  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    dns:
      - ${DOCKER_DNS}
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d/
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/fastcgi.conf:/etc/nginx/fastcgi.conf
      - ./project:/var/www:rw
      - ./nginx/ssl:/etc/nginx/ssl:rw
      - ./log/nginx:/var/log/nginx:rw
    environment:
      - TZ=${NGINX_TZ}
    links:
      # 指定服务名称:别名(给了container_name就不需要别名 比如php74:fpm74)
      - php
      - php74
    networks:
      - default-network
  php:
    build: ./php-fpm
    container_name: fpm
    restart: always
    volumes:
      - ./project:/var/www:rw
      - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
      - ./php-fpm/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./php-fpm/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./log/php-fpm:/var/log/php-fpm:rw
      - ./log/php:/var/log/php:rw
    links:
      - mysql
      - redis
    expose:
      - "9000"
    dns:
      - ${DOCKER_DNS}
    networks:
      - default-network
  php74:
    build: ./php74-fpm
    container_name: fpm74
    restart: always
    volumes:
      - ./project:/var/www:rw
      - ./php74-fpm/php.ini:/usr/local/etc/php/php.ini
      - ./php74-fpm/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./php74-fpm/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
    links:
      - mysql
      - redis
    expose:
      - "9000"
    dns:
      - ${DOCKER_DNS}
    networks:
      - default-network
  mysql:
    image: mysql:5.7
    container_name: mysql57
    restart: always
    volumes:
      - ./mysql/conf/my.cnf:/etc/mysql/my.cnf
      - ./mysql/logs:/var/log/mysql:rw
      - ./mysql/data:/var/lib/mysql:rw
    environment:
      #- MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${MYSQL_TZ}
    ports:
      - "3306:3306"
    dns:
      - ${DOCKER_DNS}
    networks:
      - default-network
  redis:
    #image: redis:5.0.8
    image: redis:3.2.12
    container_name: redis32
    restart: always
    volumes:
      #- ./redis/conf/redis.conf:/etc/redis/redis.conf
      - ./redis/data:/data:rw
      - ./log/redis:/var/log/redis/:rw
      #environment:
      #- REDIS_HOST=${REDIS_HOST}
      #- REDIS_PASSWORD=123456
      #- TZ=${REDIS_TZ}
    #entrypoint: ["redis-server", "/etc/redis/redis.conf"]
    ports:
      - "6379:6379"
    dns:
      - ${DOCKER_DNS}
    networks:
      - default-network
#  rabbitmq:
#    image: rabbitmq:3.8.3-management
#    container_name: rabbitmq
#    restart: always
#    volumes:
#      #- ./rabbitmq:/var/lib/rabbitmq
#      - ./log/rabbitmq:/var/log/rabbitmq:rw
#      - ./rabbitmq/mnesia:/var/lib/rabbitmq/mnesia:rw
#    environment:
#      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
#      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
#    ports:
#      - 15672:15672
#      - 5672:5672
#    networks:
#      - default-network
networks:
  default-network:
    driver: bridge

