version: "3"
services:
  nginx:
    image: nginx:1.18.0
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      #- ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/conf.d:/etc/nginx/conf.d/
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/fastcgi.conf:/etc/nginx/fastcgi.conf
      - ./project:/var/www:rw
      - ./nginx/ssl:/etc/nginx/ssl:rw
      - ./log/nginx:/var/log/nginx:rw
    environment:
     - TZ=${NGINX_TZ}
    links:
      - php
    networks:
      - default-network
  php:
    build: .
    container_name: php
    restart: always
    volumes:
      - ./project:/var/www:rw
      - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
      - ./php-fpm/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./php-fpm/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./log/php-fpm:/var/log/php-fpm:rw
      - ./log/php:/var/log/php:rw
      #- ./php-fpm/git_ssh/known_hosts:/root/.ssh/known_hosts:rw
    links:
      - mysql:${MYSQL_HOST}
      - redis:${REDIS_HOST}
    expose:
      - "9000"
    networks:
      - default-network
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${MYSQL_TZ}
    ports:
      - "3306:3306"
    networks:
      - default-network
  redis:
    image: redis:5.0.8
    container_name: redis
    restart: always
    volumes:
      #- ./redis/conf/redis.conf:/etc/redis/redis.conf
      - ./redis/data:/data:rw
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - TZ=${REDIS_TZ}
    entrypoint: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6379:6379"
    networks:
      - default-network
networks:
  default-network:
    driver: bridge
